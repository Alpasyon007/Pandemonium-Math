namespace Pandemonium {
    namespace Math {
        namespace Vector {
            class Vector2 {
                // Variables
                private:
                public:
                    float x;
                    float y;
                // Methods
                private:
                public:
                    // Constructors
                    Vector2(float _x, float _y);
                    Vector2();

                    // Operators
                    void    operator=  (Vector2 const &v);

                    Vector2 operator+  (Vector2 const &v);
                    void    operator+= (Vector2 const &v);

                    Vector2 operator*  (int const &n);
                    void    operator*= (int const &n);  

                    Vector2 operator/  (int const &n);
                    void    operator/= (int const &n);

                    // Methods
                    void Inverse       ();
                    float Dot          (Vector2 const &v);
            };
    
            class Vector3 {
                // Variables
                private:
                public:
                    float x;
                    float y;
                    float z;
                // Methods
                private:
                public:
                    // Constructors
                    Vector3(float _x, float _y, float _z);
                    Vector3(float _x, float _y);
                    Vector3();

                    // Operators
                    void    operator=  (Vector3 const &v);

                    Vector3 operator+  (Vector3 const &v);
                    void    operator+= (Vector3 const &v);

                    Vector3 operator*  (int const &n);
                    void    operator*= (int const &n);  

                    Vector3 operator/  (int const &n);
                    void    operator/= (int const &n);

                    // Methods
                    void    Inverse    ();
                    float   Dot        (Vector3 const &v);
                    Vector3 Cross      (Vector3 const &v);
            };
        }
    }
}